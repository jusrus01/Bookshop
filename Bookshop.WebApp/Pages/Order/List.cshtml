@page
@using Bookshop.Contracts.Constants
@using Bookshop.Contracts.Services
@model Bookshop.WebApp.Pages.Order.ListModel
@{
}
@section Styles
    {
    <link href="@Url.Content("~/css/order.css")" rel="stylesheet" type="text/css" />
}


    <div class="row">
        <div class="col">
            <h3>Orders</h3>
        </div>
    </div>

    <div>
        <div class="col text-end">

        @if (User.IsInRole(BookshopRoles.Administrator))
        {
            <form action="/Order/Add" class="btn">
                <input class="btn btn-primary" value="Add order" style="width: 130px" name="submit" type="submit">
            </form>
        }

    </div>
</div>
<ul class="list-group">
    <li class="list-group-item d-none d-md-block">
        <div class="row">
            <div class="col-md-2">
                Client
            </div>

            <div class="col-md-2">
                Created date
            </div>

            <div class="col-md-2">
                Sum
            </div>

            <div class="col-md-2">
                Postal Code
            </div>
            @if (User.IsInRole(BookshopRoles.Administrator))
            {
                <div class="col-md-3 text-center actions-container">
                    Actions
                </div>
            }
        </div>
    </li>

    @{
        var index = 0;
    }

    @foreach (var order in Model.Paged.Items)
    {
        <li class="list-group-item">
            <div class="row">
                <div class="col-md-2 my-auto">

                    <span>  @order.ClientName</span>
                </div>

                <div class="col-md-2 my-auto">

                    <span>@order.Created</span>
                </div>

                <div class="col-md-2 my-auto">

                    <span>@order.Sum</span>
                </div>

                <div class="col-md-2 my-auto">
                    <span>@order.PostalCode</span>
                </div>

                <div class="col-md-3 text-center actions-container">
                    @if (User.IsInRole(BookshopRoles.Administrator))
                    {
                        <button class="btn btn-danger" id="removeModalButton@(index)" data-toggle="modal" data-target="#exampleModal">
                            <i class="fa-solid fa-trash-can"></i>
                        </button>
                    }

                    <!-- Modal -->
                    <div class="modal fade" id="removeModal@(index)" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalLabel">Remove</h5>
                                    <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close">
                                    </button>
                                </div>
                                <div class="modal-body text-start">
                                    <p>Are you sure you want to remove this client?</p>
                                </div>
                                <div class="modal-footer">
                                    <form method="post">
                                        <input name="id" value="@order.Id" hidden />
                                        <button type="submit" class="btn btn-danger" onclick="close()">Remove</button>
                                    </form>
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="close()">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    @{
                        index++;
                    }
                </div>
            </div>
        </li>

    }
</ul>


<div class="pagination-container">
    @if (!Model.Paged.PreviousPageIsEmpty)
    {
        <a class="btn btn-outline-primary" asp-page="/Order/List" asp-route-pageNumber="@Model.PreviousPage">Previous</a>
    }
    else
    {
        <button class="btn btn-outline-primary">Previous</button>
    }

    @if (!Model.Paged.NextPageIsEmpty)
    {
        <a class="btn btn-primary" asp-page="/Order/List" asp-route-pageNumber="@Model.NextPage">Next</a>
    }
    else
    {
        <button class="btn btn-primary">Next</button>
    }
</div>

</div>


@section Scripts
    {
    <script>
        for (let i = 0; i < @index; i++) {
            $('#removeModalButton' + i).click(function (event) {
                $('#removeModal' + i).modal('show');
            });
        }
    </script>
}